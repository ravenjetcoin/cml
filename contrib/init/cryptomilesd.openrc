#!/sbin/runscript

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/cryptomiles/.cryptomiles" ]; then
	CRYPTOMILESD_DEFAULT_DATADIR="/var/lib/cryptomiles/.cryptomiles"
else
	CRYPTOMILESD_DEFAULT_DATADIR="/var/lib/cryptomilesd"
fi

CRYPTOMILESD_CONFIGFILE=${CRYPTOMILESD_CONFIGFILE:-/etc/cryptomiles/cryptomiles.conf}
CRYPTOMILESD_PIDDIR=${CRYPTOMILESD_PIDDIR:-/var/run/cryptomilesd}
CRYPTOMILESD_PIDFILE=${CRYPTOMILESD_PIDFILE:-${CRYPTOMILESD_PIDDIR}/cryptomilesd.pid}
CRYPTOMILESD_DATADIR=${CRYPTOMILESD_DATADIR:-${CRYPTOMILESD_DEFAULT_DATADIR}}
CRYPTOMILESD_USER=${CRYPTOMILESD_USER:-${CRYPTOMILES_USER:-cryptomiles}}
CRYPTOMILESD_GROUP=${CRYPTOMILESD_GROUP:-cryptomiles}
CRYPTOMILESD_BIN=${CRYPTOMILESD_BIN:-/usr/bin/cryptomilesd}
CRYPTOMILESD_NICE=${CRYPTOMILESD_NICE:-${NICELEVEL:-0}}
CRYPTOMILESD_OPTS="${CRYPTOMILESD_OPTS:-${CRYPTOMILES_OPTS}}"

name="Cryptomiles Core Daemon"
description="Cryptomiles cryptocurrency P2P network daemon"

command="/usr/bin/cryptomilesd"
command_args="-pid=\"${CRYPTOMILESD_PIDFILE}\" \
		-conf=\"${CRYPTOMILESD_CONFIGFILE}\" \
		-datadir=\"${CRYPTOMILESD_DATADIR}\" \
		-daemon \
		${CRYPTOMILESD_OPTS}"

required_files="${CRYPTOMILESD_CONFIGFILE}"
start_stop_daemon_args="-u ${CRYPTOMILESD_USER} \
			-N ${CRYPTOMILESD_NICE} -w 2000"
pidfile="${CRYPTOMILESD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${CRYPTOMILESD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${CRYPTOMILESD_USER}:${CRYPTOMILESD_GROUP}" \
	"${CRYPTOMILESD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${CRYPTOMILESD_USER}:${CRYPTOMILESD_GROUP}" \
	"${CRYPTOMILESD_PIDDIR}"

	checkpath -f \
	-o ${CRYPTOMILESD_USER}:${CRYPTOMILESD_GROUP} \
	-m 0660 \
	${CRYPTOMILESD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${CRYPTOMILESD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run cryptomilesd."
		eerror "The setting must appear in ${CRYPTOMILESD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Cryptomiles Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
